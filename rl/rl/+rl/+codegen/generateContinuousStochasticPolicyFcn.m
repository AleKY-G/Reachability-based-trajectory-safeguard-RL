function argStruct = generateContinuousStochasticPolicyFcn(argStruct,numericSpec)
% GENERATECONTINUOUSSTOCHASTICPOLICYFCN generates continuous stochastic 
% policy (use for PG, AC, etc. agents)

% Copyright 2019 The MathWorks, Inc.

% REVISIT: should this method live in sampling strategy?

outputstr    = argStruct.OutputString;
inputstr     = argStruct.InputString ;
outputstr_y  = rl.codegen.handleMultipleOutputStrings(outputstr);

% REVISIT: support multiple action channels
if ~isscalar(numericSpec)
    error(message('rl:agent:CodegenNotSupportMultiContinuousActionChannel'));
end
numAction = prod(numericSpec.Dimension);
argStruct.EvaluateFunctionName = 'localEvaluate';

bodystr = sprintf([...
    'numAction = %s;\n',...
    '%% Get the actions mean and standard deviation\n',...
    'meanAndStd = localEvaluate(%s);\n',...
    'actionMean = meanAndStd(1:numAction);\n',...
    'actionStd = meanAndStd(numAction+1:end);\n',...
    '%% Sample action from mean and standard deviation\n',...
    '%s = actionMean + actionStd .* randn(size(actionMean),''like'',actionMean);'],...
    num2str(numAction),...
    inputstr,...
    outputstr_y...
    );
argStruct.EvaluateOutputString = 'meanAndStd';
argStruct.BodyString = bodystr;